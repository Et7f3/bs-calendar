
=========================
planned for next release:
=========================

* documentation de la nouvelle feature avec variant polymorphe
* utiliser les variants polymorphes pour types les printers et les parsers
  (i.e. coder leur version safe). Pour cela, introduire un type "'a fmt" pour 
  les formats et coder des constructeurs de format avec les bonnes contraintes 
  de types ainsi qu'une fonction de concaténation de format.
* fonction Date.make_year : [ `Year ] Date.t
* fonction Date.make_month: [ `Month ] Date.t
* Utils.Deprecated
* module Parser (suggestion de Guillaume Yziquel)
* plus de fonctions pour faciliter le parsing (en plus des *from_*string*)
* FAQ (suggestion de Guillaume Yziquel)
* page introductive comme point d'entrée pour la doc
  (suggestion de Guillaume Yziquel) 
* support des noms de ville principale pour les Time Zone
  (suggestion de Guillaume Yziquel)

* [ongoing] pouvoir gérer facilement les dates moins précises 
  (sans jour ou mois exprimé) (suggestion de Warren Harris).

===============
other features:
===============

* intégrer les nouvelles options de date (date --help)
    %g: 2 derniers chiffres de l'année correspondant au numéro de semaine ISO
    %G: année correspondant au numéro de semaine ISO (utile avec %V seulement)
    %N: nanosecondes (000000000..999999999)
    %u: jour de la semaine 1..7, 1=lundi
    %U: numéro de la semaine dans l'année débutant par le dimanche
        comme premier jour de la semaine (00..53)
    %V: le numéro de la semaine ISO dans l'année débutant par le lundi
        comme premier jour de la semaine (01..53) 
	[soit %V, soit %W a changé de spec]
    %w: le jour de la semaine (0..6);  0 représente le dimanche
    	[changement de spec]
    %W: le numéro de la semaine dans l'année débutant par le lundi
        comme premier jour de la semaine (00..53)
	[soit %V, soit %W a changé de spec]
    %Z:	 abréviation alphabétique des fuseaux horaires (i.e. EDT)
    tags:
    #:  casse opposée si possible
    nombre possible après un tag pour indiquer la largeur du champ
    (en fait, largeur champ = max entre nombre indiqué et place requise)
* printing float seconds (suggestion de Warren Harris) ==> %N
* ajouter AC ou BC dans le printer. 
  Plus généralement, bien afficher les dates avant JC
* lever limitation intervalles de date (suggestion de Warren Harris)
* mieux préciser différences version Precise vs standart, en particulier 
  connaître "the range and precision of each representation" 
  (suggestion de Warren Harris)
* constructeurs safe et "unsafe" (pour Date, Time et Calendar)
* constructeurs prenant le mois sous forme de month (et non de int) en param
* ouvrir la porte à de nouveaux calendriers en codant plusieurs implantations
  de Date basés sur divers calendrier (avec signature commune).
  Mettre alors en place des conversions inter-calendrier (de grégorien vers 
  julien et vice-versa, etc).
* adapter par rapport à la nouvelle FAQ et aux fichiers .ps
* permettre le native dynlink de calendar
